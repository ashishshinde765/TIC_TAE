{"ast":null,"code":"import _asyncToGenerator from \"G:/STE/GITHUB/TIC-TAE-TOE-GAME/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Status } from './gamestatus';\nexport class Gamelogic {\n  constructor() {\n    this.gameField = [];\n    this.gameStatus = Status.STOP;\n    this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  }\n\n  gameStart() {\n    this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    this.currentTurn = this.randomPlayerStart();\n    console.log(this.currentTurn);\n    this.gameStatus = Status.START;\n  }\n\n  randomPlayerStart() {\n    const startPlayer = Math.floor(Math.random() * 2) + 1;\n    return startPlayer;\n  }\n\n  setField(position, value) {\n    this.gameField[position] = value;\n  }\n\n  getPlayerColorClass() {\n    const colorClass = this.currentTurn === 2 ? 'player-two' : 'player-one';\n    return colorClass;\n  }\n\n  changePlayer() {\n    this.currentTurn = this.currentTurn === 2 ? 1 : 2;\n  }\n\n  checkGameEndFull() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let isFull = true;\n\n      if (_this.gameField.includes(0)) {\n        isFull = false;\n      }\n\n      if (isFull) {\n        console.log(\"\");\n\n        _this.gameEnd();\n\n        return true;\n      } else {\n        return false;\n      }\n    })();\n  }\n\n  gameEnd() {}\n\n}","map":{"version":3,"sources":["G:/STE/GITHUB/TIC-TAE-TOE-GAME/src/app/gamelogic.ts"],"names":["Status","Gamelogic","constructor","gameField","gameStatus","STOP","gameStart","currentTurn","randomPlayerStart","console","log","START","startPlayer","Math","floor","random","setField","position","value","getPlayerColorClass","colorClass","changePlayer","checkGameEndFull","isFull","includes","gameEnd"],"mappings":";AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,OAAO,MAAMC,SAAN,CAAgB;AACnBC,EAAAA,WAAW,GAAG;AACV,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,UAAL,GAAkBJ,MAAM,CAACK,IAAzB;AACA,SAAKF,SAAL,GAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAjB;AACH;;AACDG,EAAAA,SAAS,GAAG;AACR,SAAKH,SAAL,GAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAjB;AACA,SAAKI,WAAL,GAAmB,KAAKC,iBAAL,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,WAAjB;AACA,SAAKH,UAAL,GAAkBJ,MAAM,CAACW,KAAzB;AACH;;AACDH,EAAAA,iBAAiB,GAAG;AAChB,UAAMI,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAApD;AACA,WAAOH,WAAP;AACH;;AACDI,EAAAA,QAAQ,CAACC,QAAD,EAAWC,KAAX,EAAkB;AACtB,SAAKf,SAAL,CAAec,QAAf,IAA2BC,KAA3B;AACH;;AACDC,EAAAA,mBAAmB,GAAG;AAClB,UAAMC,UAAU,GAAG,KAAKb,WAAL,KAAqB,CAArB,GAAyB,YAAzB,GAAwC,YAA3D;AACA,WAAOa,UAAP;AACH;;AACDC,EAAAA,YAAY,GAAG;AACX,SAAKd,WAAL,GAAmB,KAAKA,WAAL,KAAqB,CAArB,GAAyB,CAAzB,GAA6B,CAAhD;AACH;;AACKe,EAAAA,gBAAgB,GAAG;AAAA;;AAAA;AACrB,UAAIC,MAAM,GAAG,IAAb;;AACA,UAAI,KAAI,CAACpB,SAAL,CAAeqB,QAAf,CAAwB,CAAxB,CAAJ,EAAgC;AAC5BD,QAAAA,MAAM,GAAG,KAAT;AACH;;AACD,UAAIA,MAAJ,EAAY;AACRd,QAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;;AACA,QAAA,KAAI,CAACe,OAAL;;AACA,eAAO,IAAP;AACH,OAJD,MAKK;AACD,eAAO,KAAP;AACH;AAZoB;AAaxB;;AACDA,EAAAA,OAAO,GAAG,CACT;;AAzCkB","sourcesContent":["import { Status } from './gamestatus';\r\nexport class Gamelogic {\r\n    constructor() {\r\n        this.gameField = [];\r\n        this.gameStatus = Status.STOP;\r\n        this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n    gameStart() {\r\n        this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        this.currentTurn = this.randomPlayerStart();\r\n        console.log(this.currentTurn);\r\n        this.gameStatus = Status.START;\r\n    }\r\n    randomPlayerStart() {\r\n        const startPlayer = Math.floor(Math.random() * 2) + 1;\r\n        return startPlayer;\r\n    }\r\n    setField(position, value) {\r\n        this.gameField[position] = value;\r\n    }\r\n    getPlayerColorClass() {\r\n        const colorClass = this.currentTurn === 2 ? 'player-two' : 'player-one';\r\n        return colorClass;\r\n    }\r\n    changePlayer() {\r\n        this.currentTurn = this.currentTurn === 2 ? 1 : 2;\r\n    }\r\n    async checkGameEndFull() {\r\n        let isFull = true;\r\n        if (this.gameField.includes(0)) {\r\n            isFull = false;\r\n        }\r\n        if (isFull) {\r\n            console.log(\"\");\r\n            this.gameEnd();\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    gameEnd() {\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}